# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build & push image, kustomize to aliyun ack

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGION_ID: cn-shenzhen
  REGISTRY: registry.cn-shenzhen.aliyuncs.com
  REGISTRY_VPC: registry-vpc.cn-shenzhen.aliyuncs.com
  NAMESPACE: org-ypq
  IMAGE: seata-offical
  TAG: 1.4.2
  ACK_CLUSTER_ID: c5edce17c51214115bb128fb557142fda
  ACK_DEPLOYMENT_NAME: seata
  KUSTOMIZATION_PATH: k8s/base

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          docker -v

      # 3.1 Set ACK context
      - name: Set K8s context
        uses: aliyun/ack-set-context@v1
        with:
          access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
          access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
          cluster-id: "${{ env.ACK_CLUSTER_ID }}"

      # 3.2 Deploy the image to the ACK cluster
      - name: Set up Kustomize
        run: |-
          cd $KUSTOMIZATION_PATH
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash /dev/stdin 3.8.6
      - name: Deploy
        run: |-
          cd $KUSTOMIZATION_PATH
          ./kustomize edit set image REGISTRY/NAMESPACE/IMAGE:TAG=$REGISTRY_VPC/$NAMESPACE/$IMAGE:$TAG
          kubectl apply -k .
          kubectl rollout status deployment/$ACK_DEPLOYMENT_NAME
          kubectl get services -o wide